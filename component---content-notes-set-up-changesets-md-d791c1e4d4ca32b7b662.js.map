{"version":3,"sources":["webpack:///./src/templates/note-template.js","webpack:///./content/notes/set-up-changesets.md"],"names":["Layout","children","pageContext","title","frontmatter","date","published","sx","maxWidth","px","py","mb","to","color","display","fontSize","bg","variant","mt","m","timeago","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"6FAAA,2GAOe,SAASA,EAAT,GAA4C,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YACnCC,EAAQD,EAAYE,YAAYD,MAChCE,EAAOH,EAAYE,YAAYC,KAC/BC,EAAYJ,EAAYE,YAAYE,UAC1C,OACE,uBACE,YAAC,IAAD,KACE,yBAAQH,IAEV,mBACEI,GAAI,CACFC,SAAU,YACVC,GAAI,CAAC,EAAG,GACRC,GAAI,CAAC,EAAG,KAGV,mBAAKH,GAAI,CAAEI,GAAI,CAAC,EAAG,KACjB,YAAC,IAAD,CAAMC,GAAG,IAAIL,GAAI,CAAEM,MAAO,WACxB,YAAC,IAAD,QAGJ,wBACE,mBAAKN,GAAI,CAAEI,GAAI,CAAC,EAAG,KACfL,EAaE,KAZF,mBACEC,GAAI,CACFO,QAAS,eACTC,SAAU,EACVL,GAAI,EACJD,GAAI,EACJE,GAAI,EACJK,GAAI,UAPR,eAaF,kBAAIT,GAAI,CAAEU,QAAS,YAAaC,GAAI,EAAGP,GAAI,IAAMR,GAChDE,EACC,iBAAGE,GAAI,CAAEY,EAAG,EAAGD,GAAI,EAAGH,SAAU,IAAhC,WACWK,IAAef,IAExB,MAELJ,O,sNC7CJ,IAAMoB,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,sBACE,kBAAIC,WAAW,MACb,iBAAGA,WAAW,MAAd,WAA+B,+BAAGA,WAAW,KAAQ,CACjD,KAAQ,0CADmB,iBAA/B,wBAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,WAA+B,+BAAGA,WAAW,KAAQ,CACjD,KAAQ,qEACP,0BAAYA,WAAW,KAAvB,qBACL,mBAAKA,WAAW,MAAK,kCAAMA,WAAW,OAAU,CAC5C,UAAa,mBADI,sCAKvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,yBACA,mBAAKA,WAAW,MAAK,kCAAMA,WAAW,OAAU,CAC5C,UAAa,mBADI,2BAKvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,SAA6B,0BAAYA,WAAW,KAAvB,WAA7B,WACA,mBAAKA,WAAW,MAAK,kCAAMA,WAAW,OAAU,CAC5C,UAAa,kBADI,oGAUvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,eAAmC,+BAAGA,WAAW,KAAQ,CACrD,KAAQ,sEADuB,eAIrC,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,UAA8B,0BAAYA,WAAW,KAAvB,aAA9B,IAAwF,+BAAGA,WAAW,KAAQ,CAC1G,KAAQ,oIAD4E,UAAxF,yBAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,UAA8B,+BAAGA,WAAW,KAAQ,CAChD,KAAQ,yDACP,0BAAYA,WAAW,KAAvB,oCAEP,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,kBAAsC,+BAAGA,WAAW,KAAQ,CACxD,KAAQ,kFAD0B,qBAAtC,wBAGA,mBAAKA,WAAW,MAAK,kCAAMA,WAAW,OAAU,CAC5C,UAAa,iBADI,+rDAmE7BJ,EAAWK,gBAAiB","file":"component---content-notes-set-up-changesets-md-d791c1e4d4ca32b7b662.js","sourcesContent":["/** @jsx jsx */\nimport { Link } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport { jsx } from 'theme-ui'\nimport * as timeago from 'timeago.js'\nimport Logo from '../components/logo'\n\nexport default function Layout({ children, pageContext }) {\n  const title = pageContext.frontmatter.title\n  const date = pageContext.frontmatter.date\n  const published = pageContext.frontmatter.published\n  return (\n    <div>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <div\n        sx={{\n          maxWidth: 'container',\n          px: [3, 5],\n          py: [4, 5],\n        }}\n      >\n        <div sx={{ mb: [4, 5] }}>\n          <Link to=\"/\" sx={{ color: 'accent' }}>\n            <Logo />\n          </Link>\n        </div>\n        <main>\n          <div sx={{ mb: [3, 4] }}>\n            {!published ? (\n              <div\n                sx={{\n                  display: 'inline-block',\n                  fontSize: 1,\n                  py: 1,\n                  px: 2,\n                  mb: 2,\n                  bg: 'muted',\n                }}\n              >\n                Unpublished\n              </div>\n            ) : null}\n            <h1 sx={{ variant: 'styles.h1', mt: 0, mb: 0 }}>{title}</h1>\n            {date ? (\n              <p sx={{ m: 0, mt: 2, fontSize: 1 }}>\n                Updated {timeago.format(date)}\n              </p>\n            ) : null}\n          </div>\n          {children}\n        </main>\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/colebemis.com/colebemis.com/src/templates/note-template.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Install `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/apps/changeset-bot\"\n          }}>{`changeset-bot`}</a>{` on your repository`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Install `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/atlassian/changesets/tree/master/packages/cli\"\n          }}><inlineCode parentName=\"a\">{`@changesets/cli`}</inlineCode></a></p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`yarn add --dev @changesets/cli\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Initialize changesets`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`yarn changeset init\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add a `}<inlineCode parentName=\"p\">{`release`}</inlineCode>{` script`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-diff\"\n          }}>{`// package.json\n{\n  \"scripts\": {\n    \"release\": \"yarn build && changeset publish\"\n  }\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Generate an `}<a parentName=\"p\" {...{\n            \"href\": \"https://docs.npmjs.com/creating-and-viewing-authentication-tokens\"\n          }}>{`npm token`}</a></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add an `}<inlineCode parentName=\"p\">{`NPM_TOKEN`}</inlineCode>{` `}<a parentName=\"p\" {...{\n            \"href\": \"https://docs.github.com/en/free-pro-team@latest/actions/reference/encrypted-secrets#creating-encrypted-secrets-for-a-repository\"\n          }}>{`secret`}</a>{` for your repository`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/changesets/action#with-publishing\"\n          }}><inlineCode parentName=\"a\">{`.github/workflows/release.yml`}</inlineCode></a></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`(Optional) Add `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/atlassian/changesets/blob/master/docs/snapshot-releases.md\"\n          }}>{`snapshot releases`}</a>{` to your CI workflow`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yml\"\n          }}>{`# .github/workflows/ci.yml\nname: CI\non:\n  push:\n    branches-ignore:\n      - $default-branch\njobs:\n  ci:\n    name: CI\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repo\n        uses: actions/checkout@master\n        with:\n          # This makes Actions fetch all Git history so that Changesets\n          # can generate changelogs with the correct commits.\n          fetch-depth: 0\n\n      # If you use a version of Node other than 12, change it here.\n      - name: Set up Node.js 12.x\n        uses: actions/setup-node@master\n        with:\n          node-version: 12.x\n\n      # If you use npm instead of yarn, change this to \\`npm install\\`.\n      - name: Install dependencies\n        run: yarn\n\n      # Change this to customize your build command.\n      - name: Build\n        run: yarn build\n\n      # Change this to customize your test command.\n      - name: Test\n        run: yarn test\n\n      - name: Create .npmrc\n        run: |\n          cat << EOF > \"$HOME/.npmrc\"\n            //registry.npmjs.org/:_authToken=$NPM_TOKEN\n          EOF\n        env:\n          NPM_TOKEN: \\${{ secrets.NPM_TOKEN }}\n\n      - name: Release snapshot\n        run: |\n          npx changeset version --snapshot\n          npx changeset publish --tag canary\n        env:\n          GITHUB_TOKEN: \\${{ secrets.GITHUB_TOKEN }}\n\n      - name: Post published version to GitHub checks\n        run: |\n          name=$(jq -r .name package.json)\n          version=$(jq -r .version package.json)\n          npx action-status --context=$name --state=success --description=$version --url=\"https://unpkg.com/$name@$version/\"\n        env:\n          GITHUB_TOKEN: \\${{ secrets.GITHUB_TOKEN }}\n`}</code></pre>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}