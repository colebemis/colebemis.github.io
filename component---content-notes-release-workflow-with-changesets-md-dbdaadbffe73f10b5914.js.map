{"version":3,"sources":["webpack:///./content/notes/release-workflow-with-changesets.md","webpack:///./src/templates/note-template.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent","Layout","children","pageContext","title","frontmatter","date","published","sx","maxWidth","px","py","mb","to","color","display","fontSize","bg","variant","mt","m","timeago"],"mappings":"iRAMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,MAAS,GAET,kBAAIC,WAAW,MACb,iBAAGA,WAAW,MAAK,+BAAGA,WAAW,KAAQ,CACrC,KAAQ,uBADO,iDAIrB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,2BACA,mBAAKA,WAAW,MAAK,kCAAMA,WAAW,OAAU,CAC5C,UAAa,mBADI,gCAKvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,+BACA,mBAAKA,WAAW,MAAK,kCAAMA,WAAW,OAAU,CAC5C,UAAa,mBADI,qCAMvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,mEACA,mBAAKA,WAAW,MAAK,kCAAMA,WAAW,OAAU,CAC5C,UAAa,mBADI,sBAKvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,yBACA,mBAAKA,WAAW,MAAK,kCAAMA,WAAW,OAAU,CAC5C,UAAa,mBADI,oBAKvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,mCAAuD,0BAAYA,WAAW,KAAvB,QAAvD,sBAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,kFAAsG,+BAAGA,WAAW,KAAQ,CACxH,KAAQ,+DAD0F,sBAAtG,kBAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,qCAAyD,0BAAYA,WAAW,KAAvB,QAAzD,sBAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,qEAORJ,EAAWK,gBAAiB,G,oCChF5B,2GAOe,SAASC,EAAT,GAA4C,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YACnCC,EAAQD,EAAYE,YAAYD,MAChCE,EAAOH,EAAYE,YAAYC,KAC/BC,EAAYJ,EAAYE,YAAYE,UAC1C,OACE,uBACE,YAAC,IAAD,KACE,yBAAQH,IAEV,mBACEI,GAAI,CACFC,SAAU,YACVC,GAAI,CAAC,EAAG,GACRC,GAAI,CAAC,EAAG,KAGV,mBAAKH,GAAI,CAAEI,GAAI,CAAC,EAAG,KACjB,YAAC,IAAD,CAAMC,GAAG,IAAIL,GAAI,CAAEM,MAAO,WACxB,YAAC,IAAD,QAGJ,wBACE,mBAAKN,GAAI,CAAEI,GAAI,CAAC,EAAG,KACfL,EAaE,KAZF,mBACEC,GAAI,CACFO,QAAS,eACTC,SAAU,EACVL,GAAI,EACJD,GAAI,EACJE,GAAI,EACJK,GAAI,UAPR,eAaF,kBAAIT,GAAI,CAAEU,QAAS,YAAaC,GAAI,EAAGP,GAAI,IAAMR,GAChDE,EACC,iBAAGE,GAAI,CAAEY,EAAG,EAAGD,GAAI,EAAGH,SAAU,IAAhC,WACWK,IAAef,IAExB,MAELJ","file":"component---content-notes-release-workflow-with-changesets-md-dbdaadbffe73f10b5914.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/colebemis.com/colebemis.com/src/templates/note-template.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <ol {...{\n      \"start\": 0\n    }}>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><a parentName=\"p\" {...{\n            \"href\": \"/set-up-changesets\"\n          }}>{`Set up changesets in your GitHub repository`}</a></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a feature branch`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`git checkout -b <branch>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Push changes to your branch`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`git commit -m \"...\"\ngit push\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add a changeset (if the changes should result in a new version)`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`yarn changeset\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a pull request`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-shell\"\n          }}>{`gh pr create\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Merge the pull request into the `}<inlineCode parentName=\"p\">{`main`}</inlineCode>{` (default) branch`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`If the pull request contained a changeset, the changesets action will create a `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/colebemis/demo-component-library/pull/5\"\n          }}>{`\"Version Packages\"`}</a>{` pull request`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Continue merging changes into the `}<inlineCode parentName=\"p\">{`main`}</inlineCode>{` (default) branch`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Merge the \"Version Packages\" pull request to trigger a release`}</p>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { Link } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport { jsx } from 'theme-ui'\nimport * as timeago from 'timeago.js'\nimport Logo from '../components/logo'\n\nexport default function Layout({ children, pageContext }) {\n  const title = pageContext.frontmatter.title\n  const date = pageContext.frontmatter.date\n  const published = pageContext.frontmatter.published\n  return (\n    <div>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <div\n        sx={{\n          maxWidth: 'container',\n          px: [3, 5],\n          py: [4, 5],\n        }}\n      >\n        <div sx={{ mb: [4, 5] }}>\n          <Link to=\"/\" sx={{ color: 'accent' }}>\n            <Logo />\n          </Link>\n        </div>\n        <main>\n          <div sx={{ mb: [3, 4] }}>\n            {!published ? (\n              <div\n                sx={{\n                  display: 'inline-block',\n                  fontSize: 1,\n                  py: 1,\n                  px: 2,\n                  mb: 2,\n                  bg: 'muted',\n                }}\n              >\n                Unpublished\n              </div>\n            ) : null}\n            <h1 sx={{ variant: 'styles.h1', mt: 0, mb: 0 }}>{title}</h1>\n            {date ? (\n              <p sx={{ m: 0, mt: 2, fontSize: 1 }}>\n                Updated {timeago.format(date)}\n              </p>\n            ) : null}\n          </div>\n          {children}\n        </main>\n      </div>\n    </div>\n  )\n}\n"],"sourceRoot":""}